#!/bin/bash
# Wrapper script for bash-it - adapts original install.sh for system-wide installation

BASH_IT="/usr/share/bash-it"
export BASH_IT

# Determine config file like original install.sh
case $OSTYPE in
    darwin*)
        CONFIG_FILE=.bash_profile
        ;;
    *)
        CONFIG_FILE=.bashrc
        ;;
esac

# Allow overriding CONFIG_FILE
CONFIG_FILE="${BASH_IT_CONFIG_FILE:-"${CONFIG_FILE}"}"
BACKUP_FILE="$CONFIG_FILE.bak"

if [ ! -d "$BASH_IT" ]; then
    echo "Error: bash-it is not properly installed" >&2
    exit 1
fi

# Load bash-it functions for management commands
if [ -f "$BASH_IT/lib/utilities.bash" ] && [ -f "$BASH_IT/lib/helpers.bash" ]; then
    # shellcheck disable=SC1090
    source "$BASH_IT/vendor/github.com/erichs/composure/composure.sh" 2>/dev/null
    # shellcheck source=/usr/share/bash-it/lib/utilities.bash
    source "$BASH_IT/lib/utilities.bash"
    # shellcheck source=/usr/share/bash-it/lib/log.bash
    source "$BASH_IT/lib/log.bash" 2>/dev/null
    # shellcheck source=/usr/share/bash-it/lib/helpers.bash  
    source "$BASH_IT/lib/helpers.bash"
fi

case "$1" in
    install)
        echo "Installing bash-it for current user..."
        
        # Check if already installed
        if grep -q "source.*bash_it\.sh" "$HOME/$CONFIG_FILE" 2>/dev/null; then
            echo "bash-it appears to be already configured in ~/$CONFIG_FILE"
            echo "If you want to reinstall, please remove the existing configuration first."
            exit 0
        fi
        
        # Backup existing config
        if [ -f "$HOME/$CONFIG_FILE" ]; then
            cp "$HOME/$CONFIG_FILE" "$HOME/$BACKUP_FILE"
            echo "Your original $CONFIG_FILE has been backed up to $BACKUP_FILE"
        fi
        
        # Create config directory if needed
        if [[ "${CONFIG_FILE%/*}" != "${CONFIG_FILE}" ]]; then
            mkdir -p "${HOME}/${CONFIG_FILE%/*}"
        fi
        
        # Add bash-it configuration (similar to template)
        cat >> "$HOME/$CONFIG_FILE" << 'EOF'

# Path to the bash it configuration
export BASH_IT="/usr/share/bash-it"

# Lock and Load a custom theme file.
# Leave empty to disable theming.
# location /.bash_it/themes/
export BASH_IT_THEME='bobby'

# (Advanced): Change this to the name of your remote repo if you
# cloned bash-it with a remote other than origin such as `bash-it`.
# export BASH_IT_REMOTE='bash-it'

# Your place for hosting Git repos. I use this for private repos.
export GIT_HOSTING='git@git.domain.com'

# Don't check mail when opening terminal.
unset MAILCHECK

# Change this to your console based IRC client of choice.
export IRC_CLIENT='irssi'

# Set this to the command you use for todo.txt-cli
export TODO="t"

# Set this to false to turn off version control status checking within the prompt for all themes
export SCM_CHECK=true

# Set Xterm/screen/Tmux title with only a short hostname.
# Uncomment this (or set SHORT_HOSTNAME to something else),
# Will otherwise fall back on $HOSTNAME.
#export SHORT_HOSTNAME=$(hostname -s)

# Set Xterm/screen/Tmux title with only a short username.
# Uncomment this (or set SHORT_USER to something else),
# Will otherwise fall back on $USER.
#export SHORT_USER=${USER:0:8}

# Set Xterm/screen/Tmux title with shortened command and directory.
# Uncomment this to set.
#export SHORT_TERM_LINE=true

# Set vcprompt executable path for scm advance info in prompt (demula theme)
# https://github.com/djl/vcprompt
#export VCPROMPT_EXECUTABLE=~/.vcprompt/bin/vcprompt

# (Advanced): Uncomment this to make Bash-it reload itself automatically
# after enabling or disabling aliases, plugins, and completions.
# export BASH_IT_AUTOMATIC_RELOAD_AFTER_CONFIG_CHANGE=1

# Uncomment this to make Bash-it create alias reload.
# export BASH_IT_RELOAD_LEGACY=1

# Load Bash It
source "$BASH_IT"/bash_it.sh
EOF
        
        echo "bash-it has been added to your ~/$CONFIG_FILE"
        echo "To start using it, open a new tab or run: source ~/$CONFIG_FILE"
        echo ""
        echo "To show available aliases/completions/plugins:"
        echo "  bash-it show aliases"
        echo "  bash-it show completions"
        echo "  bash-it show plugins"
        ;;
        
    uninstall)
        echo "Removing bash-it from current user configuration..."
        if [ -f "$HOME/$CONFIG_FILE" ]; then
            # Remove bash-it configuration block
            sed -i '/# Path to the bash it configuration/,/source.*bash_it\.sh/d' "$HOME/$CONFIG_FILE"
            # Remove any standalone bash-it exports
            sed -i '/export BASH_IT=/d' "$HOME/$CONFIG_FILE"
            echo "bash-it has been removed from ~/$CONFIG_FILE"
            echo "Please restart your shell"
        else
            echo "Configuration file ~/$CONFIG_FILE not found"
        fi
        ;;
        
    show|enable|disable|help|restart|reload|doctor|migrate|update|search|describe)
        # Pass through to original bash-it functionality
        if [ -f "$BASH_IT/lib/utilities.bash" ]; then
            exec "$BASH_IT/scripts/bash-it.sh" "$@"
        else
            echo "Error: bash-it management scripts not found"
            exit 1
        fi
        ;;
        
    --help|-h|"")
        echo "bash-it - Bash framework for command line productivity"
        echo ""
        echo "Usage: bash-it <command> [options]"
        echo ""
        echo "Setup commands:"
        echo "  install     - Install bash-it for current user"
        echo "  uninstall   - Remove bash-it from current user"
        echo ""
        echo "Management commands:"
        echo "  show <type>         - Show available/enabled components"
        echo "  enable <type> <name> - Enable a component"  
        echo "  disable <type> <name> - Disable a component"
        echo "  help [<type>]       - Show help"
        echo "  doctor              - Run diagnostic checks"
        echo "  reload              - Reload bash-it"
        echo "  restart             - Restart bash (reload config)"
        echo "  search <term>       - Search for components"
        echo "  describe <type> <name> - Describe a component"
        echo ""
        echo "Types: aliases, plugins, completions"
        echo ""
        echo "bash-it is installed in: $BASH_IT"
        ;;
        
    *)
        echo "Unknown command: $1"
        echo "Use 'bash-it help' or 'bash-it --help' for usage information"
        exit 1
        ;;
esac
